echo " **  Invoking Custom Assemble Script"

# Finds appropriate environment variable
function find_env() {                                                           
  var=`printenv "$1"`                                                           
  # If environment variable exists                                              
  if [ -n "$var" ]; then                                                        
    echo $var                                                                   
  else                                                                          
    echo $2                                                                     
  fi                                                                            
}  

# Generates the appropriate datasource based on input parameters from template
function generate_datasource(){
  echo " <Resource name=\"jdbc/PostgreSQLDS\"\nurl=\"jdbc:postgresql://172.30.73.46:5432/sampledb\"\ndriverClassName=\"org.postgresql.xa.PGXADataSource\"\nusername=\"userXO2\"\npassword=\"DAsettShuF2aaXcK\"\nauth=\"Container\"\ntype=\"javax.sql.DataSource\"\nmaxActive=\"20\"\nmaxIdle=\"5\"\nmaxWait=\"10000\" />"          
}

# Get Env Variables and Generate Config
driver="org.postgresql.Driver"
jndi=$(find_env "${prefix}_JNDI" "jboss/datasources/${service,,}")        
password=$(find_env "${prefix}_PASSWORD")                                 
database=$(find_env "${prefix}_DATABASE")                                 
url="jdbc:${db,,}://$(find_env "${service}_SERVICE_HOST"):$(find_env "${service}_SERVICE_PORT")/$database"

datasources="$(generate_datasource $jndi $username $password $driver $url)\n\n"

C=$(echo $datasources | sed 's/\//\\\//g')
sed -i "/<\/Context>/ s/.*/${C}\n&/" $JWS_HOME/conf/context.xml

echo " **  Invoking Default Assemble Script"
/usr/local/s2i/assemble


